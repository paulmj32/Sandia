theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.position = "top")
print(p)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.position = "top")
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"))
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "horizontal",
legend.box = "horizontal",
legend.position = c(.25, .75)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "horizontal",
legend.box = "vertical",
legend.position = c(.5, .75)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "horizontal",
legend.box = "horizontal",
legend.position = c(.5, .75)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.35, "cm"),
legend.direction = "horizontal",
legend.box = "horizontal",
legend.position = c(.4, .8)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.5, "cm"),
legend.direction = "horizontal",
legend.box = "horizontal",
legend.position = c(.4, .8)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.x = unit(-0.25, "cm"),
legend.direction = "horizontal",
legend.box = "horizontal",
legend.position = c(.4, .8)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.x = unit(-0.05, "cm"),
legend.direction = "horizontal",
legend.box = "vertical",
legend.position = c(.4, .8)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(#legend.spacing.x = unit(-0.05, "cm"),
legend.direction = "horizontal",
legend.box = "horizontal",
legend.position = c(.4, .8)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "horizontal",
legend.position = c(.3, .8)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.3, .8)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 5),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.15, .75)
)
print(p)
}
plot_filtering_estimates2(gg)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "#00BFC4", "#E7B800"),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 6),
labels = c("BART", "Lasso", "RF", "XGB"),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.15, .75),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
