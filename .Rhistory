# ggplot
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 5, 6),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.15, .75),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
?legend
# ggplot
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 5, 6),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.25, .75),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
# ggplot
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 5, 6),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.225, .75),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
# ggplot
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 5, 6),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.215, .775),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
# ggplot
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 5, 6),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("Model Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.215, .8),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
# ggplot
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 5, 6),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("County-Level Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.215, .8),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
# ggplot
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = actual, shape = "Actual"), color = "black", alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = 16
) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
scale_linetype_manual(values = c(1, 2, 3, 6),
labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("County-Level Predictions: Test Sample") +
guides(
color = guide_legend(order = 2),
shape = guide_legend(order = 1),
linetype = guide_legend(order = 2)
) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.215, .8),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
gg_all = gg %>% pivot_longer(!index, names_to = "Model", values_to = "ypred")
# ggplot (for all)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_actual, aes(x = index, y = ypred, color = Model, shape = Model), alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = c(16, 2, 3, 4, 5),
labels = c("Actual",
bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
)
) +
scale_color_manual(
values = c("black", "#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c("Actual",
bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
geom_line(data = gg_pred, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
# scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
#                    labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
#                               bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
#                               bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
#                               bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
#                    ),
#                    name = element_blank()) +
scale_linetype_manual(
values = c(1, 1, 1, 1, 1),
labels = c("Actual",
bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("County-Level Predictions: Test Sample") +
# guides(
#   color = guide_legend(order = 2),
#   shape = guide_legend(order = 1),
#   linetype = guide_legend(order = 2)
# ) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.215, .8),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
# ggplot (for all)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_all, aes(x = index, y = ypred, color = Model, shape = Model), alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = c(16, 2, 3, 4, 5),
labels = c("Actual",
bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
)
) +
scale_color_manual(
values = c("black", "#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c("Actual",
bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
geom_line(data = gg_all, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.95) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
# scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
#                    labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
#                               bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
#                               bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
#                               bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
#                    ),
#                    name = element_blank()) +
scale_linetype_manual(
values = c(1, 1, 1, 1, 1),
labels = c("Actual",
bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("County-Level Predictions: Test Sample") +
# guides(
#   color = guide_legend(order = 2),
#   shape = guide_legend(order = 1),
#   linetype = guide_legend(order = 2)
# ) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.215, .8),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
# ggplot (for all)
plot_filtering_estimates2 <- function(df) {
p = ggplot() +
theme_classic() +
geom_point(data = gg_all, aes(x = index, y = ypred, color = Model, shape = Model), alpha = 1) +
scale_shape_manual(
name = element_blank(),
values = c(16, 2, 3, 4, 5),
labels = c("Actual",
bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
)
) +
scale_color_manual(
values = c("black", "#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
labels = c("Actual",
bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
geom_line(data = gg_all, aes(x = index, y = ypred, color = Model, lty = Model), alpha = 0.8) +
#scale_color_viridis(discrete = T, option = "D", direction = 1) +
# scale_color_manual(values = c("#FC4E07", "#1E88E5", "forestgreen", "#E7B800"),
#                    labels = c(bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
#                               bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
#                               bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
#                               bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
#                    ),
#                    name = element_blank()) +
scale_linetype_manual(
values = c(1, 1, 1, 1, 1),
labels = c("Actual",
bquote("BART (" * R^2 ~ "=" ~ .(rsq_bart) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_bart) * ")"),
bquote("Lasso (" * R^2 ~ "=" ~ .(rsq_lre) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_lre) * ")"),
bquote("RF (" * R^2 ~ "=" ~ .(rsq_rf) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_rf) * ")"),
bquote("XGB (" * R^2 ~ "=" ~ .(rsq_gbm) * "," ~ RMSE[cv] ~ "=" ~ .(cverror_gbm) * ")")
),
name = element_blank()) +
#scale_color_locuszoom() +
ylab("Outage Duration (log hours)") +
#ylab("Max Cust. Outages (log)") +
scale_y_continuous(labels = function(x) paste0(x)) +
xlab("Outage Index (event x county)") +
ggtitle("County-Level Predictions: Test Sample") +
# guides(
#   color = guide_legend(order = 2),
#   shape = guide_legend(order = 1),
#   linetype = guide_legend(order = 2)
# ) +
theme(legend.spacing.y = unit(-0.25, "cm"),
legend.direction = "vertical",
legend.box = "vertical",
legend.position = c(.215, .8),
plot.title = element_text(hjust = 0.5)
)
print(p)
}
plot_filtering_estimates2(gg)
bart_fit$cv_stats
bart_fit$rmse_train
bart_fit$PseudoRsq
########################################################################################################
##### VARIABLE IMPORTANCE - FINAL MODEL ################################################################
########################################################################################################
final_model = gb_work %>%
finalize_workflow(gb_best) %>%
fit(df_data)
